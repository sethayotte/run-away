[{"/Users/SethMitchell/Documents/Run Away/run-away/src/index.js":"1","/Users/SethMitchell/Documents/Run Away/run-away/src/reportWebVitals.js":"2","/Users/SethMitchell/Documents/Run Away/run-away/src/App.js":"3","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Landing.js":"4","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Menu.js":"5","/Users/SethMitchell/Documents/Run Away/run-away/src/components/TicketHorizontal.js":"6","/Users/SethMitchell/Documents/Run Away/run-away/src/components/TicketVertical.js":"7","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Booking.js":"8","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Confirmation.js":"9","/Users/SethMitchell/Documents/Run Away/run-away/src/components/BookingData.js":"10","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Origin.js":"11","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Footer.js":"12"},{"size":500,"mtime":1609806765610,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609806765612,"results":"15","hashOfConfig":"14"},{"size":1115,"mtime":1610911019321,"results":"16","hashOfConfig":"14"},{"size":456,"mtime":1610756977852,"results":"17","hashOfConfig":"14"},{"size":335,"mtime":1610910957579,"results":"18","hashOfConfig":"14"},{"size":317,"mtime":1609982167183,"results":"19","hashOfConfig":"14"},{"size":305,"mtime":1609982683821,"results":"20","hashOfConfig":"14"},{"size":1587,"mtime":1610845571081,"results":"21","hashOfConfig":"14"},{"size":915,"mtime":1610847929023,"results":"22","hashOfConfig":"14"},{"size":10183,"mtime":1610848421761,"results":"23","hashOfConfig":"14"},{"size":2965,"mtime":1610848227848,"results":"24","hashOfConfig":"14"},{"size":2232,"mtime":1610914608214,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ey35eu",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/SethMitchell/Documents/Run Away/run-away/src/index.js",[],["54","55"],"/Users/SethMitchell/Documents/Run Away/run-away/src/reportWebVitals.js",[],"/Users/SethMitchell/Documents/Run Away/run-away/src/App.js",[],"/Users/SethMitchell/Documents/Run Away/run-away/src/components/Landing.js",[],"/Users/SethMitchell/Documents/Run Away/run-away/src/components/Menu.js",[],"/Users/SethMitchell/Documents/Run Away/run-away/src/components/TicketHorizontal.js",[],"/Users/SethMitchell/Documents/Run Away/run-away/src/components/TicketVertical.js",[],"/Users/SethMitchell/Documents/Run Away/run-away/src/components/Booking.js",[],"/Users/SethMitchell/Documents/Run Away/run-away/src/components/Confirmation.js",["56","57"],"import React from 'react'\nimport {Icon} from 'react-icons-kit'\nimport {ic_check_circle} from 'react-icons-kit/md/ic_check_circle'\nimport {ic_public} from 'react-icons-kit/md/ic_public'\n\nconst Confirmation = () => {\n  return (\n    <div className='pageContent' id='landing'>\n      <section className='landingBody'>\n        <Icon className='confirmationIcon' size={70} icon={ic_public} />\n        <h1 className='confirmationHeader'>Coming Soon.</h1>\n        <p className='inputInstructions'>\n          We're working with our parter to bring the ability to book flights\n          directly through Run Away.\n          <br />\n          <br />\n          For now, search your suggested destination through{' '}\n          <a href='https://flights.google.com' target='_blank'>\n            <span id='searchLink'>Google Flights!</span>\n          </a>\n        </p>\n      </section>\n    </div>\n  )\n}\n\nexport default Confirmation\n","/Users/SethMitchell/Documents/Run Away/run-away/src/components/BookingData.js",["58","59","60"],"import React, {useState, useEffect, useMemo} from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport axios from 'axios'\n\nimport {Icon} from 'react-icons-kit'\nimport {ic_flight_takeoff} from 'react-icons-kit/md/ic_flight_takeoff'\nimport {ic_flight_land} from 'react-icons-kit/md/ic_flight_land'\n\nconst destinationDataset = [\n  'AKL',\n  'AMS',\n  'ARN',\n  'ATH',\n  'ATL',\n  'AYT',\n  'BCN',\n  'BKK',\n  'BNE',\n  'BOG',\n  'BOM',\n  'BOS',\n  'BRU',\n  'BSB',\n  'BWI',\n  'CAN',\n  'CDG',\n  'CGH',\n  'CGK',\n  'CJU',\n  'CLT',\n  'CPH',\n  'CTS',\n  'CTU',\n  'DCA',\n  'DEL',\n  'DEN',\n  'DFW',\n  'DME',\n  'DOH',\n  'DTW',\n  'DUB',\n  'DUS',\n  'DXB',\n  'EWR',\n  'FCO',\n  'FLL',\n  'FRA',\n  'FUK',\n  'GIG',\n  'GMP',\n  'GRU',\n  'HEL',\n  'HGH',\n  'HKG',\n  'HND',\n  'IAD',\n  'IAH',\n  'ICN',\n  'IST',\n  'JED',\n  'JFK',\n  'JNB',\n  'KMG',\n  'KUL',\n  'LAS',\n  'LAX',\n  'LGA',\n  'LGW',\n  'LHR',\n  'LIS',\n  'MAD',\n  'MAN',\n  'MCO',\n  'MDW',\n  'MEL',\n  'MEX',\n  'MIA',\n  'MNL',\n  'MSP',\n  'MUC',\n  'MXP',\n  'NRT',\n  'ORD',\n  'ORY',\n  'OSL',\n  'PEK',\n  'PHL',\n  'PHX',\n  'PMI',\n  'PVG',\n  'RUH',\n  'SAN',\n  'SEA',\n  'SFO',\n  'SHA',\n  'SIN',\n  'SLC',\n  'STN',\n  'SVO',\n  'SYD',\n  'SZX',\n  'TPA',\n  'TPE',\n  'TXL',\n  'VIE',\n  'XMN',\n  'YVR',\n  'YYZ',\n  'ZRH',\n]\n\nconst BookingData = (props) => {\n  const {origin} = props\n  const [fare, setFare] = useState(null)\n  const [destinationCode, setDestinationCode] = useState(null)\n  const [originCode, setOriginCode] = useState(null)\n  const [destinationCityName, setDestinationCityName] = useState(null)\n  const [destinationCountryName, setDestinationCountryName] = useState(null)\n  const [originCityName, setOriginCityName] = useState(null)\n  const [originCountryName, setOriginCountryName] = useState(null)\n  const [outboundDate, setOutboundDate] = useState('0000.00.00')\n  const [inboundDate, setInboundDate] = useState('0000.00.00')\n  const [outboundAirline, setOutboundAirline] = useState(null)\n  const [inboundAirline, setInboundAirline] = useState(null)\n  const [routeStatus, setRouteStatus] = useState(null)\n\n  const destIndex = Math.floor(Math.random() * destinationDataset.length)\n\n  const requestOutbound = destinationDataset[destIndex]\n\n  //Random Date Generation\n\n  const generateTravelDates = () => {\n    //Outbound Data Setup\n    const baseline = new Date().toISOString().slice(0, 10)\n    let baselineDay = parseInt(baseline.slice(8, 10))\n    let baselineMonth = parseInt(baseline.slice(5, 7))\n    let baselineYear = parseInt(baseline.slice(0, 4))\n    let outboundMonth\n    let outboundYear\n    let outboundDay\n    let randomOutboundDate\n\n    const outboundDayGen = () => {\n      outboundDay = Math.floor(Math.random() * 30) + 1 + baselineDay\n      if (outboundDay > 30) {\n        baselineMonth = baselineMonth + 1\n        outboundDay = outboundDay - 30\n      }\n    }\n    outboundDayGen()\n\n    const outboundMonthGen = () => {\n      outboundMonth = Math.floor(Math.random() * 8) + 1 + baselineMonth\n      if (outboundMonth > 12) {\n        baselineYear = baselineYear + 1\n        outboundMonth = outboundMonth - 12\n      }\n    }\n\n    outboundMonthGen()\n\n    outboundYear = baselineYear\n\n    if (outboundMonth < 10) {\n      outboundMonth = `0${outboundMonth}`\n    }\n\n    if (outboundDay < 10) {\n      outboundDay = `0${outboundDay}`\n    }\n\n    randomOutboundDate = `${outboundYear}-${outboundMonth}-${outboundDay}`\n\n    //Inbound Data Setup\n    const tripLengthArray = [4, 7, 10, 14, 18, 21]\n    const n = Math.floor(Math.random() * 6)\n    const tripDuration = tripLengthArray[n]\n    let inboundMonth = Number(outboundMonth)\n    let inboundYear = outboundYear\n    let randomInboundDate\n\n    let inboundDay = tripDuration + +outboundDay\n    const inboundMonthCheck = () => {\n      if (inboundDay > 30) {\n        inboundMonth += 1\n        inboundDay -= 30\n      }\n    }\n    inboundMonthCheck()\n    const inboundYearCheck = () => {\n      if (inboundMonth > 12) {\n        inboundYear += 1\n        inboundMonth -= 12\n      }\n    }\n    inboundYearCheck()\n\n    if (inboundMonth < 10) {\n      inboundMonth = `0${inboundMonth}`\n    }\n\n    if (inboundDay < 10) {\n      inboundDay = `0${inboundDay}`\n    }\n    randomInboundDate = `${inboundYear}-${inboundMonth}-${inboundDay}`\n    return [randomOutboundDate, randomInboundDate]\n  }\n\n  const [randomOutboundDate, randomInboundDate] = generateTravelDates()\n\n  //API Request Data Handling\n\n  const options = useMemo(\n    () => ({\n      method: 'GET',\n      url: `https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/us/usd/us/${origin}/${requestOutbound}/anytime/anytime`,\n      headers: {\n        'x-rapidapi-key': process.env.REACT_APP_SKYSCANNER_KEY,\n        'x-rapidapi-host':\n          'skyscanner-skyscanner-flight-search-v1.p.rapidapi.com',\n      },\n    }),\n    [origin]\n  )\n\n  const dateConversion = (date) => {\n    let str = date\n    let year = str.slice(0, 4)\n    let month = str.slice(5, 7)\n    let day = str.slice(8, 10)\n    return `${month}/${day}/${year}`\n  }\n\n  useEffect(() => {\n    const getFlightData = async () => {\n      //   const requestStatus = response.status\n      const flightData = await (await axios.request(options))?.data\n      let i = 0\n      if (flightData.Quotes.length > 0 || i < 15) {\n        const {Places, Quotes, Carriers} = flightData\n        const formattedOutboundDate = dateConversion(\n          Quotes[0].OutboundLeg.DepartureDate\n        )\n        const formattedInboundDate = dateConversion(\n          Quotes[0].InboundLeg.DepartureDate\n        )\n\n        const airlineCheck = (direction) => {\n          if (direction !== 'outbound' && direction !== 'inbound') return\n          const {OutboundLeg, InboundLeg} = Quotes[0]\n          const leg = direction === 'outbound' ? OutboundLeg : InboundLeg\n          const carrier = Carriers.filter(\n            (carrier) => carrier.CarrierId === leg.CarrierIds[0]\n          )[0]\n          if (carrier) return carrier.Name\n          return null\n        }\n\n        const outAirline = airlineCheck('outbound')\n        const inAirline = airlineCheck('inbound')\n\n        setDestinationCode(Places[1].IataCode)\n        setOriginCode(Places[0].IataCode)\n        setDestinationCityName(Places[1].CityName)\n        setDestinationCountryName(Places[1].CountryName)\n        setOriginCityName(Places[0].CityName)\n        setOriginCountryName(Places[0].CountryName)\n        setOutboundDate(formattedOutboundDate)\n        setInboundDate(formattedInboundDate)\n        setOutboundAirline(outAirline)\n        setInboundAirline(inAirline)\n        setFare(Quotes[0].MinPrice)\n        setRouteStatus(Quotes[0].Direct ? 'direct' : 'indirect')\n      } else {\n        getFlightData()\n        i++\n        console.log('attempt number', i)\n      }\n    }\n\n    generateTravelDates()\n\n    getFlightData()\n  }, [options])\n\n  const originSkeletonCheck = () => {\n    if (\n      originCode != null &&\n      setOriginCityName != null &&\n      originCountryName != null\n    ) {\n      return `(${originCode}) ${originCityName}, ${originCountryName}`\n    } else {\n      return <Skeleton />\n    }\n  }\n\n  const destinationSkeletonCheck = () => {\n    if (\n      destinationCode != null &&\n      destinationCityName != null &&\n      destinationCountryName != null\n    ) {\n      return `(${destinationCode}) ${destinationCityName}, ${destinationCountryName}`\n    } else {\n      return <Skeleton />\n    }\n  }\n\n  const datesSkeletonCheck = () => {\n    if (outboundDate !== '0000.00.00' && inboundDate !== '0000.00.00') {\n      return `${outboundDate} - ${inboundDate}`\n    } else {\n      return <Skeleton />\n    }\n  }\n\n  const itineraryOBSkeletonCheck = () => {\n    if (\n      outboundAirline != null &&\n      inboundAirline != null &&\n      routeStatus != null\n    ) {\n      return ` ${outboundAirline}, ${routeStatus}`\n    } else {\n      return <Skeleton width={200} />\n    }\n  }\n\n  const itineraryIBSkeletonCheck = () => {\n    if (\n      outboundAirline != null &&\n      inboundAirline != null &&\n      routeStatus != null\n    ) {\n      return ` ${inboundAirline}, ${routeStatus}`\n    } else {\n      return <Skeleton width={200} />\n    }\n  }\n\n  const fareSkeletonCheck = () => {\n    if (fare != null) {\n      return `${fare}`\n    } else {\n      return <Skeleton width={85} />\n    }\n  }\n\n  return (\n    <div className='ticketData'>\n      <div className='dataContainerL'>\n        <div className='sectionContainer'>\n          <div className='numHeader'>\n            <h2>1</h2>\n            <h3>Origin</h3>\n          </div>\n          <div className='sectionContent'>\n            <p>{originSkeletonCheck()}</p>\n          </div>\n        </div>\n        <div className='sectionContainer'>\n          <div className='numHeader'>\n            <h2>2</h2>\n            <h3>Destination</h3>\n          </div>\n          <div className='sectionContent'>\n            <p>{destinationSkeletonCheck()}</p>\n          </div>\n        </div>\n        <div className='sectionContainer'>\n          <div className='numHeader'>\n            <h2>3</h2>\n            <h3>Dates</h3>\n          </div>\n          <div className='sectionContent'>\n            <p>{datesSkeletonCheck()}</p>\n          </div>\n        </div>\n      </div>\n      <div className='dataContainerR'>\n        <div className='sectionContainer'>\n          <div className='numHeader'>\n            <h2>4</h2>\n            <h3>Itinerary</h3>\n          </div>\n          <div className='sectionContent'>\n            <p className='itineraryFirstChild'>\n              <Icon size={24} icon={ic_flight_takeoff} />\n              {itineraryOBSkeletonCheck()}\n            </p>\n            <p className='itinerarySecondChild'>\n              <Icon size={24} icon={ic_flight_land} />\n              {itineraryIBSkeletonCheck()}\n            </p>\n          </div>\n        </div>\n        <div className='sectionContainer'>\n          <div className='numHeader'>\n            <h2>5</h2>\n            <h3>Fare</h3>\n          </div>\n          <div className='sectionContent'>\n            <p>As low as:</p>\n            <p id='farePrice'>\n              ${fareSkeletonCheck()}\n              <span id='currencyType'>usd</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BookingData\n","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Origin.js",["61","62","63"],"import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\n\nconst validationDataset = [\n  'ABQ',\n  'ADW',\n  'AFW',\n  'AGS',\n  'AMA',\n  'ANC',\n  'ATL',\n  'AUS',\n  'AVL',\n  'BAB',\n  'BAD',\n  'BDL',\n  'BFI',\n  'BGR',\n  'BHM',\n  'BIL',\n  'BLV',\n  'BMI',\n  'BNA',\n  'BOI',\n  'BOS',\n  'BUF',\n  'BWI',\n  'CAE',\n  'CBM',\n  'CHA',\n  'CHS',\n  'CID',\n  'CLE',\n  'CLT',\n  'CMH',\n  'COS',\n  'CRP',\n  'CRW',\n  'CVG',\n  'CVS',\n  'DAB',\n  'DAL',\n  'DAY',\n  'DBQ',\n  'DCA',\n  'DEN',\n  'DFW',\n  'DLF',\n  'DLH',\n  'DOV',\n  'DSM',\n  'DTW',\n  'DYS',\n  'EDW',\n  'END',\n  'ERI',\n  'EWR',\n  'FAI',\n  'FFO',\n  'FLL',\n  'FSM',\n  'FTW',\n  'FWA',\n  'GEG',\n  'GPT',\n  'GRB',\n  'GSB',\n  'GSO',\n  'GSP',\n  'GUS',\n  'HIB',\n  'HMN',\n  'HNL',\n  'HOU',\n  'HSV',\n  'HTS',\n  'IAD',\n  'IAH',\n  'ICT',\n  'IND',\n  'JAN',\n  'JAX',\n  'JFK',\n  'JLN',\n  'LAS',\n  'LAX',\n  'LBB',\n  'LCK',\n  'LEX',\n  'LFI',\n  'LFT',\n  'LGA',\n  'LIT',\n  'LTS',\n  'LUF',\n  'MBS',\n  'MCF',\n  'MCI',\n  'MCO',\n  'MDW',\n  'MEM',\n  'MGE',\n  'MGM',\n  'MHT',\n  'MIA',\n  'MKE',\n  'MLI',\n  'MLU',\n  'MOB',\n  'MSN',\n  'MSP',\n  'MSY',\n  'MUO',\n  'OAK',\n  'OKC',\n  'OMA',\n  'ONT',\n  'ORD',\n  'ORF',\n  'PAM',\n  'PBI',\n  'PDX',\n  'PHF',\n  'PHL',\n  'PHX',\n  'PIA',\n  'PIT',\n  'PVD',\n  'PWM',\n  'RDU',\n  'RFD',\n  'RIC',\n  'RND',\n  'RNO',\n  'ROA',\n  'ROC',\n  'RST',\n  'RSW',\n  'SAN',\n  'SAT',\n  'SAV',\n  'SBN',\n  'SDF',\n  'SEA',\n  'SFB',\n  'SFO',\n  'SGF',\n  'SJC',\n  'SKA',\n  'SLC',\n  'SMF',\n  'SNA',\n  'SPI',\n  'SPS',\n  'SRQ',\n  'SSC',\n  'STL',\n  'SUS',\n  'SUU',\n  'SUX',\n  'SYR',\n  'SZL',\n  'TCM',\n  'TIK',\n  'TLH',\n  'TOL',\n  'TPA',\n  'TRI',\n  'TUL',\n  'TUS',\n  'TYS',\n  'VBG',\n  'VPS',\n  'WRB',\n]\n\nconst Origin = ({origin, setOrigin}) => {\n  useEffect(() => {\n    setOrigin('')\n  }, [])\n\n  const handleChange = (event) => {\n    setOrigin(event.target.value.toUpperCase())\n  }\n\n  console.log('origin', origin)\n  return (\n    <div className='pageContent' id='landing'>\n      <section className='landingBody'>\n        <h1 id='originHeader'>What's your departure location?</h1>\n        <p className='inputInstructions'>\n          PLEASE USE AIRPORT CODE, i.e. CLT for CHARLOTTE\n        </p>\n        <input\n          style={{\n            border: 'none',\n            width: '125px',\n            outline: 'none',\n            paddingLeft: '10px',\n            borderBottom: '4px solid black',\n            margin: '45px',\n            fontFamily: 'Heebo',\n            fontSize: '36pt',\n            fontWeight: '600',\n            textAlign: 'center',\n            letterSpacing: '10px',\n          }}\n          type='text'\n          value={origin}\n          onChange={handleChange}\n          placeholder='CLT'\n          maxLength={3}\n        />\n        {/* <p className='errorInstructions'>PLEASE USE VALID U.S. AIRPORT</p> */}\n        <Link to='/booking'>\n          <button className='buttonMain' disabled={!origin}>\n            Next\n          </button>\n        </Link>\n      </section>\n    </div>\n  )\n}\n\nexport default Origin\n","/Users/SethMitchell/Documents/Run Away/run-away/src/components/Footer.js",["64","65","66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":18,"column":11,"nodeType":"78","endLine":18,"endColumn":64},{"ruleId":"72","severity":1,"message":"79","line":210,"column":10,"nodeType":"74","messageId":"75","endLine":210,"endColumn":28},{"ruleId":"72","severity":1,"message":"80","line":210,"column":30,"nodeType":"74","messageId":"75","endLine":210,"endColumn":47},{"ruleId":"81","severity":1,"message":"82","line":224,"column":5,"nodeType":"83","endLine":224,"endColumn":13,"suggestions":"84"},{"ruleId":"72","severity":1,"message":"85","line":1,"column":16,"nodeType":"74","messageId":"75","endLine":1,"endColumn":24},{"ruleId":"72","severity":1,"message":"86","line":4,"column":7,"nodeType":"74","messageId":"75","endLine":4,"endColumn":24},{"ruleId":"81","severity":1,"message":"87","line":180,"column":6,"nodeType":"83","endLine":180,"endColumn":8,"suggestions":"88"},{"ruleId":"72","severity":1,"message":"89","line":2,"column":9,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"72","severity":1,"message":"90","line":10,"column":8,"nodeType":"74","messageId":"75","endLine":10,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":39,"column":7,"nodeType":"78","endLine":39,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":50,"column":11,"nodeType":"78","endLine":50,"endColumn":35},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'ic_check_circle' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'randomOutboundDate' is assigned a value but never used.","'randomInboundDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'requestOutbound'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'useState' is defined but never used.","'validationDataset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setOrigin'. Either include it or remove the dependency array. If 'setOrigin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["96"],"'Link' is defined but never used.","'RunAwayLogo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [origin, requestOutbound]",{"range":"101","text":"102"},"Update the dependencies array to be: [setOrigin]",{"range":"103","text":"104"},[4776,4784],"[origin, requestOutbound]",[1734,1736],"[setOrigin]"]